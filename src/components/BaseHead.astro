---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import "../styles/global.css";
import "bootstrap-icons/font/bootstrap-icons.css";
import type { ImageMetadata } from "astro";
import { SITE_TITLE } from "../consts";

interface Props {
  title: string;
  description: string;
  image?: ImageMetadata;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description } = Astro.props;
---

<script is:inline>
  document.documentElement.classList.toggle(
    "dark",
    localStorage.theme === "dark" || (!("theme" in localStorage) && window.matchMedia("(prefers-color-scheme: dark)").matches),
  );
</script>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const year = document.querySelectorAll("#copyright-year");
    year.forEach((elem) => {
      elem.innerHTML = new Date().getFullYear().toString();
    });
    const onClickElements = document.querySelectorAll<HTMLElement>("[data-location]");
    onClickElements.forEach((element) => {
      const location = element.dataset.location;
      if (location) {
        element.onclick = () => {
          window.location.href = location;
        };
      }
    });

    const mobileMenuButton = document.querySelector(".mobile-menu-button");
    const mobileMenu = document.querySelector(".navigation-menu");

    if (mobileMenuButton && mobileMenu) {
      mobileMenuButton.addEventListener("click", () => {
        mobileMenu.classList.toggle("!max-h-36");
      });
    }

    const lightSwitches = document.querySelectorAll<HTMLInputElement>("input[type=checkbox].light-switch");
    if (lightSwitches.length > 0) {
      lightSwitches.forEach((lightSwitch, i) => {
        if (document.documentElement.classList.contains("dark")) {
          lightSwitch.checked = true;
        }
        lightSwitch.onchange = () => {
          const { checked } = lightSwitch;
          lightSwitches.forEach((el, n) => {
            if (n !== i) {
              el.checked = checked;
            }
          });
          let event;
          if (lightSwitch.checked) {
            document.documentElement.classList.add("dark");
            localStorage.setItem("theme", "dark");
            event = new CustomEvent("theme-change", {
              detail: {
                current: "dark",
              }
            });
          } else {
            document.documentElement.classList.remove("dark");
            localStorage.setItem("theme", "light");
            event = new CustomEvent("theme-change", {
              detail: {
                current: "light",
              }
            });
          }
          document.dispatchEvent(event);
        };
      });
    }
  });
</script>

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="sitemap" href="/sitemap-index.xml" />
<link rel="alternate" type="application/rss+xml" title={SITE_TITLE} href={new URL("rss.xml", Astro.site)} />
<meta name="generator" content={Astro.generator} />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<!-- <meta property="og:image" content={new URL(image.src, Astro.url)} /> -->

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<!-- <meta property="twitter:image" content={new URL(image.src, Astro.url)} /> -->
